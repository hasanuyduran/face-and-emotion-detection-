import cv2
import dlib
from math import hypot

cap = cv2.imread('9.jpg')

face_detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor("shape_predictor_68_face_landmarks.dat")

font= cv2.FONT_HERSHEY_SIMPLEX

gray = cv2.cvtColor(cap, cv2.COLOR_BGR2GRAY)
faces = face_detector(gray)

for face in faces:

    landmarks = predictor(gray, face)
        # ağız_yatay
    left_point = (landmarks.part(48).x, landmarks.part(48).y)
    right_point = (landmarks.part(64).x, landmarks.part(64).y)
        # ağız_dikey
    up_point = (landmarks.part(62).x, landmarks.part(62).y)
    down_point = (landmarks.part(66).x, landmarks.part(66).y)
        # kas
    eyebrow1_point = (landmarks.part(21).x, landmarks.part(21).y)
    eyebrow2_point = (landmarks.part(22).x, landmarks.part(22).y)
        # burun
    nose_point = (landmarks.part(27).x, landmarks.part(27).y)
        # burun_yan
    nose_point1 = (landmarks.part(31).x, landmarks.part(31).y)
    nose_point2 = (landmarks.part(35).x, landmarks.part(35).y)
        # göz dik
    eye_down_point = (landmarks.part(37).x, landmarks.part(37).y)
    eye_up_point = (landmarks.part(41).x, landmarks.part(41).y)
        # goz yatay
    eye_right_point = (landmarks.part(36).x, landmarks.part(36).y)
    eye_left_point = (landmarks.part(39).x, landmarks.part(39).y)

    hor_line = cv2.line(cap, left_point, right_point, (0, 255, 0), 2)  # ağız_yatay
    vertical_line = cv2.line(cap, up_point, down_point, (0, 255, 0), 2)  # ağız_dikey
    eyebrow_line = cv2.line(cap,eyebrow1_point, eyebrow2_point, (0, 255, 0), 2)  # kas
    eyebrow1_nose_line = cv2.line(cap, nose_point, eyebrow1_point, (0, 255, 0), 2)  # burun kaş1
    nose_lip_right_line = cv2.line(cap, nose_point1, left_point, (0, 255, 0), 2)  # burun dudak sol
    eye_vertical_line = cv2.line(cap, eye_down_point, eye_up_point, (0, 255, 0), 2)  # goz dikey
    eye_hor_line = cv2.line(cap, eye_right_point, eye_left_point, (0, 255, 0), 2)  # goz yatay

    hor_line_lenght = hypot((left_point[0] - right_point[0]), (left_point[1] - right_point[1]))
    vertical_line_lenght = hypot((up_point[0] - down_point[0]), (up_point[1] - down_point[1]))
    eyebrow1_nose_line_lenght = hypot((eyebrow1_point[0] - nose_point[0]), (eyebrow1_point[1] - nose_point1[1]))
    eyebrow1_eyebrow2_line_lenght = hypot((eyebrow1_point[0] - eyebrow2_point[0]), (eyebrow1_point[1] - eyebrow2_point[1]))
    nose_lip_right_line_lenght = hypot((nose_point1[0] - left_point[0]), (nose_point1[1] - left_point[1]))
    eye_vertical_line_lenght = hypot((eye_down_point[0] - eye_up_point[0]), (eye_down_point[1] - eye_up_point[1]))
    eye_hor_line_lenght = hypot((eye_right_point[0] - eye_left_point[0]), (eye_right_point[1] - eye_left_point[1]))

    ratio1 = (hor_line_lenght / (vertical_line_lenght + 1))
    ratio2 = (eyebrow1_nose_line_lenght / (eyebrow1_eyebrow2_line_lenght + 1))
    ratio3 = (nose_lip_right_line_lenght / (hor_line_lenght + 1))
    ratio4 = (eye_hor_line_lenght / (eye_vertical_line_lenght + 1))

    print("ratio1", hor_line_lenght / (vertical_line_lenght + 1))
    print("ratio2", eyebrow1_nose_line_lenght / (eyebrow1_eyebrow2_line_lenght + 1))
    print("ratio3", nose_lip_right_line_lenght / (hor_line_lenght + 1))
    print("ratio4", eye_hor_line_lenght / (eye_vertical_line_lenght + 1))

    if 2 > ratio1 > 1.1 and ratio2 > 0.6 and ratio4 < 2.3:
        cv2.putText(cap, "SASKIN", (10, 80), font, 2, (255, 0, 0))
    if 3 < ratio1 and ratio3 < 0.5 and ratio4 > 3:
        cv2.putText(cap, "MUTLU", (10,80), font, 2, (255, 0, 0))


cv2.imshow("frame",cap)
key=cv2.waitKey(0)

if cv2.waitKey(1) & 0xFF == ord('q'):
    cv2.destroyAllWindows()

